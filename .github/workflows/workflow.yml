# name: tests
# on: [push, pull_request]
# jobs:
#   run:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@main
#     - uses: actions/setup-python@main
#       with:
#         python-version: '3.8'
#     - name: Install requirements
#       run: |
#         pip install -r requirements.txt
#         pip install torchmeta>=1.7 scikit-learn>=1.3 scipy>=1.8

#    - name: List the contents of the repository
#      run: ls -al /home/runner/work/BOAT/BOAT
#
#    - name: List files in BOAT/data_hyper_cleaning
#      run: ls -al /home/runner/work/BOAT/BOAT/data_hyper_cleaning
#
#    - name: List files in BOAT/meta_learning
#      run: ls -al /home/runner/work/BOAT/BOAT/meta_learning

name: Test and Coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  # 运行在 Ubuntu 和 Windows 平台
        python-version: [3.8, 3.9, 3.10]  # 支持多版本 Python
    steps:
      # 检出代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # 安装指定 Python 版本
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # 验证 Python 环境
      - name: Verify Python Version
        run: |
          python --version
          pip --version

    - name: Generate coverage report
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install pytest-cov
        pytest --cov=/home/runner/work/BOAT/BOAT/boat --cov-report=term-missing -v /home/runner/work/BOAT/BOAT/data_hyper_cleaning/test_data_hyper_cleaning.py
        pytest --cov=/home/runner/work/BOAT/BOAT/boat --cov-report=term-missing --cov-append -v /home/runner/work/BOAT/BOAT/meta_learning/test_meta_learning.py

    - name: Statistics
      if: success()
      run: |
        coverage report
        coverage xml -o ./coverage.xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage.xml,!./cache
        flags: unittests
        name: codecov-umbrella
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
